{"ast":null,"code":"var _jsxFileName = \"/Users/kwonjaehyeon/Programming/react-practice/06-usereducer-starting-project/src/components/context/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', 1);\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","createContext","useState","AuthContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","setIsLoggedIn","logoutHandler","localStorage","removeItem","loginHandler","setItem","children"],"sources":["/Users/kwonjaehyeon/Programming/react-practice/06-usereducer-starting-project/src/components/context/auth-context.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\nconst AuthContext = createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', 1);\n    setIsLoggedIn(true);\n  };\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler,\n        onLogin: loginHandler,\n      }}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,MAAMC,WAAW,gBAAGF,aAAa,CAAC;EAChCG,UAAU,EAAE,KADoB;EAEhCC,QAAQ,EAAE,MAAM,CAAE,CAFc;EAGhCC,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE;AAHA,CAAD,CAAjC;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAC5C,MAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMU,aAAa,GAAG,MAAM;IAC1BC,YAAY,CAACC,UAAb,CAAwB,YAAxB;IACAH,aAAa,CAAC,KAAD,CAAb;EACD,CAHD;;EAKA,MAAMI,YAAY,GAAG,MAAM;IACzBF,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmC,CAAnC;IACAL,aAAa,CAAC,IAAD,CAAb;EACD,CAHD;;EAIA,oBACE,QAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLP,UAAU,EAAEA,UADP;MAELC,QAAQ,EAAEO,aAFL;MAGLN,OAAO,EAAES;IAHJ,CADT;IAAA,UAMGL,KAAK,CAACO;EANT;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAtBM;;GAAMR,mB;;KAAAA,mB;AAwBb,eAAeN,WAAf"},"metadata":{},"sourceType":"module"}